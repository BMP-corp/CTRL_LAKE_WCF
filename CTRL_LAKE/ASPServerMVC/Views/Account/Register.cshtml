@model WebMVCTempl.ServiceReference1.UserAccount

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_cubetheme.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Register</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="gtco-section">
            <div class="gtco-container">
                <div class="row">
                    <div class="col-md-12">
                        <form action="#">
                            <div class="form-group">
                                <h4>Registrazione Utente</h4>
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @if (ViewBag.Message != null)
                                {
                                    //aggiungere in quanto controlla se il viewbag proveniente da accountController esiste e lo mostra
                                    //mostra la notifica di creazione account/errore
                                    <div class="form-group">
                                        <div class="col-md-10">@ViewBag.Message</div>
                                    </div>
                                }
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })

                                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Cognome, htmlAttributes: new { @class = "control-label col-md-2" })

                                @Html.EditorFor(model => model.Cognome, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Cognome, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })

                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })

                                @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })

                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })

                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <input type="submit" value="Create" class="btn btn-special" />
                            </div>
                        </form>
                        <div> @Html.ActionLink("Torna alla Home", "Index")</div>
                        <div> @Html.ActionLink("Vai al Login", "Login")</div>
                    </div>
                       
                </div>
            </div>
        </div>
    }



                        
    </body>
</html>
